<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Aniverse</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/Capstone.styles.css" asp-append-version="true" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Livvic:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,900&family=Palanquin:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">
    <script defer type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light box-shadow mb-3">
            <div class="container-fluid">
                <div class="d-flex gap-3">
                    <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Aniverse</a>
                    <ul class="m-0">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Anime
                            </a>
                            <ul class="dropdown-menu ">
                                <li>
                                    <a class="dropdown-item" asp-action="Search" asp-controller="Search">Search</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-action="TopRated" asp-controller="Search">Top Rated</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-action="MostPopular" asp-controller="Search">Most Popular</a>
                                </li>
                            </ul>
                        </li>

                    </ul>

                </div>
                <div class="d-flex justify-content-evenly w-50 align-items-center">
                    <div class="navbar-nav d-md-block d-none">

                        <div class="d-flex align-items-center">
                            @await Component.InvokeAsync("Searchbar")
                        </div>

                    </div>
                    @if (User.Identity.Name != null)
                    {
                        <div class="d-flex gap-1">
                            <div class="nav-item notificationsBox">
                                <a class="nav-link" href="#" id="notificationBell">
                                    <i class="bi bi-bell-fill"></i>

                                    <div id="notifications"></div>
                                </a>

                                <div id="notifDropdown" class="ToggleDisplayUniversal NotificationDisappear">
                                    @await Component.InvokeAsync("Notification", new { id = int.Parse(User.Identity.Name) })
                                </div>
                            </div>
                            <div>
                                @await Component.InvokeAsync("ProfileIcon", new { id = int.Parse(User.Identity.Name) })
                            </div>

                        </div>
                    }
                    else
                    {
                        <div>
                            <a class="nav-link" data-bs-toggle="modal" data-bs-target="#LoginModal" style="cursor: pointer;">
                                Login
                            </a>
                            <form asp-action="Login" asp-controller="Auth" method="post" class="form">
                                <div class="modal fade" id="LoginModal" tabindex="-1" aria-labelledby="LoginModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h1 class="modal-title fs-5" id="LoginModalLabel">Login Form</h1>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body d-flex flex-column gap-3">
                                                <div class="form-group">
                                                    <label for="Username">Username:</label>
                                                    <input class="form-control" name="Username" placeholder="Username" />
                                                </div>
                                                <div class="form-group">
                                                    <label for="Password">Password:</label>
                                                    <input type="password" class="form-control" name="Password" placeholder="Password" />
                                                </div>
                                                <div class="form-group">

                                                    <label for="Remember">
                                                        Remember me: <input type="checkbox" name="Remember" style="width: 16px; height: 16px; vertical-align: middle" />
                                                    </label>
                                                </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">Login</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div>
                            <a class="nav-link" data-bs-toggle="modal" data-bs-target="#RegisterModal" style="cursor: pointer;">
                                Register
                            </a>
                            @await Component.InvokeAsync("Register")
                        </div>

                    }
                </div>

            </div>

        </nav>
    </header>
    <div class="container bg-white">
        <main role="main" class="pb-3">
            @if (TempData["error"] != null)
            {
                <div class="CustomAlert">
                    <p>Error: @TempData["error"]</p>
                </div>
            }
            @RenderBody()
        </main>
    </div>

    @*     <footer class=" footer text-muted">
    <div class="container">
    &copy; 2024 - Capstone - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
    </footer>
    *@

    <script type="text/javascript" src="~/js/site.js" asp-append-version="true"></script>
    <script type="text/javascript">
        let notificationBell = document.getElementById("notificationBell")
        const notifText = document.getElementById("notifications")
        const dropdown = document.getElementById("notifDropdown")

        if (notificationBell) {
            window.onload = function () {
                document.onclick = function (e) {
                    if (!e.target.classList.contains("NotificationDisappear") && !e.target.classList.contains("bi-bell-fill") && !dropdown.classList.contains("ToggleDisplayUniversal")) {
                        //element clicked wasn't the div; hide the div
                        dropdown.classList.add("ToggleDisplayUniversal");
                    }
                };
            };



            notificationBell.addEventListener("click", function () {
                dropdown.classList.remove("ToggleDisplayUniversal")
            })


        }





        function fetchNotifications() {
            fetch("/Friends/RetrieveNotifications").then(res => res.json()).then(data => {

                if (notifText) {
                    notifText.innerText = data.filter(notif => notif.isRead === 0).length

                    if (data.filter(notif => notif.isRead === 0).length === 0) {
                        notifText.classList.add("ToggleDisplayUniversal")
                    } else {
                        notifText.classList.remove("ToggleDisplayUniversal")
                    }

                }

            })
        }
        fetchNotifications()
        setInterval(() => { fetchNotifications() }, 15000)

    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
